# wgputest
' created by Leonard Pauli, 31 oct 2020

next_up:
- phong reflection model for specular
	' https://en.wikipedia.org/wiki/Phong_reflection_model
- read tut
	' http://jamie-wong.com/2016/07/15/ray-marching-signed-distance-functions/
	wgpu: // https://sotrh.github.io/learn-wgpu/beginner/tutorial6-uniforms/#using-the-uniforms-in-the-vertex-shader
	' http://learnwebgl.brown37.net/12_shader_language/glsl_control_structures.html
- shadow ray
- obj id + obj specific color/material
- union_smooth
- emission
- reflection
- diffuse
	- use noise
	- use fibonacii sphere spread
		' (exp corrected or not?)
- rotate camera
	- locally
	- around point
- move camera
	- globally
	- locally
	- local to object
- updated camera model with dof
- transparancy, glass, ior(index of refraction)(between mediums?)
- volume rendering (subsurface scattering / inside volume diffuse?)
- simple physics + anim, attraction + bounce/consistent momentum
- side-layered cube (eg. render different layers inside cube depending on which side ray passes into)
- make scene + loop gif + publish


later:
	export:
		- export image to png
		- gen gif
	quality:
		- gamma color correction?
		- antialiasing
			// see: https://www.shadertoy.com/view/MdjGR1
			if passed closeby(< 1px) mesh, lerp between first mesh + (last mesh or background) with (dist to mesh)/(1px dist (at same z))?
			// TODO: antialiasing; use pixel_width = ...; smooth_step(x, x+pixel_width...) ?
			// https://mortoray.com/2015/06/19/antialiasing-with-a-signed-distance-field/
			// https://drewcassidy.me/2020/06/26/sdf-antialiasing/
		- fps counter
		- render thumbnail/very small version (ca 100x100px), compare with last, to determine which areas to re-render
		- diffuse using fibonacii distribution
			// see http://extremelearning.com.au/evenly-distributing-points-on-a-sphere/
	effects:
		- particle simulation using compute shader
		- electrical discharge / lightning simulation
		- clouds
		- fur
		- water
	misc:
		- text render
		- editor?
		- camera fly through
	tech:
		- buffer copy?
		- using rust-gpu
		- wasm (webgpu + webgl support?)


done:
- hot reload shader
- mouse input to shader through dynamic uniform buffer
- raymarching mesh outline

' links
	https://www.iquilezles.org/www/index.htm
	https://www.shadertoy.com/view/4djGWR

// TODO: read all vscode hover doc boxes
// TODO: online/built-in compilation of shader.*
